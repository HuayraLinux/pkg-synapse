/* tile-view.h generated by valac 0.10.4, the Vala compiler, do not modify */


#ifndef __TILE_VIEW_H__
#define __TILE_VIEW_H__

#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <stdlib.h>
#include <string.h>
#include <gdk-pixbuf/gdk-pixdata.h>
#include <gdk/gdk.h>

G_BEGIN_DECLS


#define UI_WIDGETS_TYPE_ABSTRACT_TILE_OBJECT (ui_widgets_abstract_tile_object_get_type ())
#define UI_WIDGETS_ABSTRACT_TILE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UI_WIDGETS_TYPE_ABSTRACT_TILE_OBJECT, UIWidgetsAbstractTileObject))
#define UI_WIDGETS_ABSTRACT_TILE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UI_WIDGETS_TYPE_ABSTRACT_TILE_OBJECT, UIWidgetsAbstractTileObjectClass))
#define UI_WIDGETS_IS_ABSTRACT_TILE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UI_WIDGETS_TYPE_ABSTRACT_TILE_OBJECT))
#define UI_WIDGETS_IS_ABSTRACT_TILE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UI_WIDGETS_TYPE_ABSTRACT_TILE_OBJECT))
#define UI_WIDGETS_ABSTRACT_TILE_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UI_WIDGETS_TYPE_ABSTRACT_TILE_OBJECT, UIWidgetsAbstractTileObjectClass))

typedef struct _UIWidgetsAbstractTileObject UIWidgetsAbstractTileObject;
typedef struct _UIWidgetsAbstractTileObjectClass UIWidgetsAbstractTileObjectClass;
typedef struct _UIWidgetsAbstractTileObjectPrivate UIWidgetsAbstractTileObjectPrivate;

#define UI_WIDGETS_TYPE_TILE (ui_widgets_tile_get_type ())
#define UI_WIDGETS_TILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UI_WIDGETS_TYPE_TILE, UIWidgetsTile))
#define UI_WIDGETS_TILE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UI_WIDGETS_TYPE_TILE, UIWidgetsTileClass))
#define UI_WIDGETS_IS_TILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UI_WIDGETS_TYPE_TILE))
#define UI_WIDGETS_IS_TILE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UI_WIDGETS_TYPE_TILE))
#define UI_WIDGETS_TILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UI_WIDGETS_TYPE_TILE, UIWidgetsTileClass))

typedef struct _UIWidgetsTile UIWidgetsTile;
typedef struct _UIWidgetsTileClass UIWidgetsTileClass;
typedef struct _UIWidgetsTilePrivate UIWidgetsTilePrivate;

#define UI_WIDGETS_TYPE_TILE_VIEW (ui_widgets_tile_view_get_type ())
#define UI_WIDGETS_TILE_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UI_WIDGETS_TYPE_TILE_VIEW, UIWidgetsTileView))
#define UI_WIDGETS_TILE_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UI_WIDGETS_TYPE_TILE_VIEW, UIWidgetsTileViewClass))
#define UI_WIDGETS_IS_TILE_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UI_WIDGETS_TYPE_TILE_VIEW))
#define UI_WIDGETS_IS_TILE_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UI_WIDGETS_TYPE_TILE_VIEW))
#define UI_WIDGETS_TILE_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UI_WIDGETS_TYPE_TILE_VIEW, UIWidgetsTileViewClass))

typedef struct _UIWidgetsTileView UIWidgetsTileView;
typedef struct _UIWidgetsTileViewClass UIWidgetsTileViewClass;
typedef struct _UIWidgetsTileViewPrivate UIWidgetsTileViewPrivate;

#define UI_WIDGETS_TYPE_WRAP_LABEL (ui_widgets_wrap_label_get_type ())
#define UI_WIDGETS_WRAP_LABEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UI_WIDGETS_TYPE_WRAP_LABEL, UIWidgetsWrapLabel))
#define UI_WIDGETS_WRAP_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UI_WIDGETS_TYPE_WRAP_LABEL, UIWidgetsWrapLabelClass))
#define UI_WIDGETS_IS_WRAP_LABEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UI_WIDGETS_TYPE_WRAP_LABEL))
#define UI_WIDGETS_IS_WRAP_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UI_WIDGETS_TYPE_WRAP_LABEL))
#define UI_WIDGETS_WRAP_LABEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UI_WIDGETS_TYPE_WRAP_LABEL, UIWidgetsWrapLabelClass))

typedef struct _UIWidgetsWrapLabel UIWidgetsWrapLabel;
typedef struct _UIWidgetsWrapLabelClass UIWidgetsWrapLabelClass;
typedef struct _UIWidgetsWrapLabelPrivate UIWidgetsWrapLabelPrivate;

struct _UIWidgetsAbstractTileObject {
	GObject parent_instance;
	UIWidgetsAbstractTileObjectPrivate * priv;
};

struct _UIWidgetsAbstractTileObjectClass {
	GObjectClass parent_class;
	void (*active_changed) (UIWidgetsAbstractTileObject* self);
};

struct _UIWidgetsTile {
	GtkTable parent_instance;
	UIWidgetsTilePrivate * priv;
};

struct _UIWidgetsTileClass {
	GtkTableClass parent_class;
};

struct _UIWidgetsTileView {
	GtkEventBox parent_instance;
	UIWidgetsTileViewPrivate * priv;
	gint selected_index;
};

struct _UIWidgetsTileViewClass {
	GtkEventBoxClass parent_class;
	void (*append_tile) (UIWidgetsTileView* self, UIWidgetsAbstractTileObject* tile_obj);
	void (*remove_tile) (UIWidgetsTileView* self, UIWidgetsAbstractTileObject* tile_obj);
	void (*clear_selection) (UIWidgetsTileView* self);
	UIWidgetsAbstractTileObject* (*get_current_tile) (UIWidgetsTileView* self);
	void (*on_tile_active_changed) (UIWidgetsTileView* self, UIWidgetsTile* tile);
	void (*on_tile_size_allocated) (UIWidgetsTileView* self, GtkWidget* w, GdkRectangle* alloc);
};

struct _UIWidgetsWrapLabel {
	GtkLabel parent_instance;
	UIWidgetsWrapLabelPrivate * priv;
};

struct _UIWidgetsWrapLabelClass {
	GtkLabelClass parent_class;
};


GType ui_widgets_abstract_tile_object_get_type (void) G_GNUC_CONST;
GList* ui_widgets_abstract_tile_object_get_extra_buttons (UIWidgetsAbstractTileObject* self);
void ui_widgets_abstract_tile_object_add_user_button (UIWidgetsAbstractTileObject* self, GtkButton* button);
void ui_widgets_abstract_tile_object_remove_user_button (UIWidgetsAbstractTileObject* self, GtkButton* button);
UIWidgetsAbstractTileObject* ui_widgets_abstract_tile_object_construct (GType object_type);
const char* ui_widgets_abstract_tile_object_get_icon (UIWidgetsAbstractTileObject* self);
void ui_widgets_abstract_tile_object_set_icon (UIWidgetsAbstractTileObject* self, const char* value);
GdkPixbuf* ui_widgets_abstract_tile_object_get_force_pixbuf (UIWidgetsAbstractTileObject* self);
void ui_widgets_abstract_tile_object_set_force_pixbuf (UIWidgetsAbstractTileObject* self, GdkPixbuf* value);
const char* ui_widgets_abstract_tile_object_get_name (UIWidgetsAbstractTileObject* self);
void ui_widgets_abstract_tile_object_set_name (UIWidgetsAbstractTileObject* self, const char* value);
const char* ui_widgets_abstract_tile_object_get_description (UIWidgetsAbstractTileObject* self);
void ui_widgets_abstract_tile_object_set_description (UIWidgetsAbstractTileObject* self, const char* value);
const char* ui_widgets_abstract_tile_object_get_sub_description_title (UIWidgetsAbstractTileObject* self);
void ui_widgets_abstract_tile_object_set_sub_description_title (UIWidgetsAbstractTileObject* self, const char* value);
const char* ui_widgets_abstract_tile_object_get_sub_description_text (UIWidgetsAbstractTileObject* self);
void ui_widgets_abstract_tile_object_set_sub_description_text (UIWidgetsAbstractTileObject* self, const char* value);
gboolean ui_widgets_abstract_tile_object_get_show_action_button (UIWidgetsAbstractTileObject* self);
void ui_widgets_abstract_tile_object_set_show_action_button (UIWidgetsAbstractTileObject* self, gboolean value);
gboolean ui_widgets_abstract_tile_object_get_enabled (UIWidgetsAbstractTileObject* self);
void ui_widgets_abstract_tile_object_set_enabled (UIWidgetsAbstractTileObject* self, gboolean value);
const char* ui_widgets_abstract_tile_object_get_add_button_stock (UIWidgetsAbstractTileObject* self);
void ui_widgets_abstract_tile_object_set_add_button_stock (UIWidgetsAbstractTileObject* self, const char* value);
const char* ui_widgets_abstract_tile_object_get_remove_button_stock (UIWidgetsAbstractTileObject* self);
void ui_widgets_abstract_tile_object_set_remove_button_stock (UIWidgetsAbstractTileObject* self, const char* value);
const char* ui_widgets_abstract_tile_object_get_add_button_tooltip (UIWidgetsAbstractTileObject* self);
void ui_widgets_abstract_tile_object_set_add_button_tooltip (UIWidgetsAbstractTileObject* self, const char* value);
const char* ui_widgets_abstract_tile_object_get_remove_button_tooltip (UIWidgetsAbstractTileObject* self);
void ui_widgets_abstract_tile_object_set_remove_button_tooltip (UIWidgetsAbstractTileObject* self, const char* value);
void ui_widgets_abstract_tile_object_active_changed (UIWidgetsAbstractTileObject* self);
GType ui_widgets_tile_get_type (void) G_GNUC_CONST;
UIWidgetsTile* ui_widgets_tile_new (UIWidgetsAbstractTileObject* obj, gint icon_size);
UIWidgetsTile* ui_widgets_tile_construct (GType object_type, UIWidgetsAbstractTileObject* obj, gint icon_size);
void ui_widgets_tile_update_state (UIWidgetsTile* self);
void ui_widgets_tile_set_selected (UIWidgetsTile* self, gboolean selected);
GType ui_widgets_tile_view_get_type (void) G_GNUC_CONST;
UIWidgetsTileView* ui_widgets_tile_get_owner (UIWidgetsTile* self);
void ui_widgets_tile_set_owner (UIWidgetsTile* self, UIWidgetsTileView* value);
UIWidgetsAbstractTileObject* ui_widgets_tile_get_owned_object (UIWidgetsTile* self);
gboolean ui_widgets_tile_get_last (UIWidgetsTile* self);
UIWidgetsTileView* ui_widgets_tile_view_new (void);
UIWidgetsTileView* ui_widgets_tile_view_construct (GType object_type);
void ui_widgets_tile_view_append_tile (UIWidgetsTileView* self, UIWidgetsAbstractTileObject* tile_obj);
void ui_widgets_tile_view_remove_tile (UIWidgetsTileView* self, UIWidgetsAbstractTileObject* tile_obj);
GList* ui_widgets_tile_view_get_tiles (UIWidgetsTileView* self);
void ui_widgets_tile_view_clear (UIWidgetsTileView* self);
void ui_widgets_tile_view_clear_selection (UIWidgetsTileView* self);
UIWidgetsAbstractTileObject* ui_widgets_tile_view_get_current_tile (UIWidgetsTileView* self);
void ui_widgets_tile_view_on_tile_active_changed (UIWidgetsTileView* self, UIWidgetsTile* tile);
void ui_widgets_tile_view_on_tile_size_allocated (UIWidgetsTileView* self, GtkWidget* w, GdkRectangle* alloc);
gboolean ui_widgets_tile_view_on_button_press (UIWidgetsTileView* self, GdkEventButton* event);
gboolean ui_widgets_tile_view_on_key_press (UIWidgetsTileView* self, GdkEventKey* event);
void ui_widgets_tile_view_select (UIWidgetsTileView* self, gint index);
gint ui_widgets_tile_view_get_icon_size (UIWidgetsTileView* self);
void ui_widgets_tile_view_set_icon_size (UIWidgetsTileView* self, gint value);
GType ui_widgets_wrap_label_get_type (void) G_GNUC_CONST;
UIWidgetsWrapLabel* ui_widgets_wrap_label_new (void);
UIWidgetsWrapLabel* ui_widgets_wrap_label_construct (GType object_type);
gboolean ui_widgets_wrap_label_get_wrap (UIWidgetsWrapLabel* self);
void ui_widgets_wrap_label_set_wrap (UIWidgetsWrapLabel* self, gboolean value);


G_END_DECLS

#endif
